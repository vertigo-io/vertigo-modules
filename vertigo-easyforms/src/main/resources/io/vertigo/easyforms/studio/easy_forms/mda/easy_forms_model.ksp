package io.vertigo.easyforms.domain


create DtDefinition DtEasyForm {
    id efoId 		{domain: DoEfId 			label:"Id"}
    field template 	{domain: DoEfFormTemplate 	label:"Template" }
}

create DtDefinition DtEasyFormsFieldTypeUi {
    field name 				{domain: DoEfLabel 				label:"Field type" }
    field category 			{domain: DoEfLabel 				label:"Field type category" }
    field label 			{domain: DoEfLabel 				label:"Label" }
    field uiComponentName 	{domain: DoEfLabel 				label:"UI component name" }
    field uiParameters 		{domain: DoEfFormData			label:"UI parameters" }
    field paramTemplate 	{domain: DoEfFormTemplate 		label:"UI configuration template" }
    computed hasTemplate	{domain: DoEfBooleen			label:"Have configuration"
    						 expression: "return getParamTemplate() != null && !getParamTemplate().getFields().isEmpty();"
    }
    sortField: "name"
    displayField: "label"
}

create DtDefinition DtEasyFormsFieldUi {
    field fieldCode 		{domain: DoEfCode 					label:"Field code" 				cardinality:"1"}
    field fieldType 		{domain: DoEfLabel 					label:"Field type"				cardinality:"1"}
    field fieldTypeLabel 	{domain: DoEfLabel 					label:"Field type" 				}
    field label 			{domain: DoEfLabel 					label:"Label" 					cardinality:"1"}
    field tooltip 			{domain: DoEfLabel 					label:"Tooltip" 				}
    field isDefault 		{domain: DoEfBooleen 				label:"System field" 			cardinality:"1"}
    field isMandatory 		{domain: DoEfBooleen 				label:"Mandatory" 				cardinality:"1"}
    field parameters 		{domain: DoEfFormData				label:"Parameters" 				}
    field fieldValidators 	{domain: DoEfFieldValidatorUiList	label:"Validators" 				}
    field fieldValidatorSelection 	{domain: DoEfLabel			label:"Validators" 				cardinality:"*"	}
}

create DtDefinition DtEasyFormsFieldValidatorTypeUi {
    field name 				{domain: DoEfLabel 				label:"Validator type name" }
    field label 			{domain: DoEfLabel 				label:"Label" }
    field description 		{domain: DoEfText 				label:"Description" }
    field paramTemplate 	{domain: DoEfFormTemplate 		label:"UI configuration template" }
    field fieldTypes 		{domain: DoEfText 				label:"Attached to fields" cardinality:"*" }
    sortField: "name"
    displayField: "label"
}

create DtDefinition DtEasyFormsTemplateFieldValidatorUi {
    field validatorTypeName 	{domain: DoEfLabel 				label:"Validator type name" 	}
    field label 				{domain: DoEfLabel 				label:"Label"					}
    field parameterizedLabel 	{domain: DoEfLabel 				label:"Label"					}
    field description 			{domain: DoEfText 				label:"Description" 			}
    field parameters 			{domain: DoEfFormData			label:"Parameters JSON" 		}
}
