package io.vertigo.easyforms.domain;

import java.util.Arrays;
import java.util.Iterator;

import io.vertigo.core.lang.Generated;
import io.vertigo.datamodel.structure.definitions.DtFieldName;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class DtDefinitions implements Iterable<Class<?>> {

	/**
	 * Enumération des DtDefinitions.
	 */
	public enum Definitions {
		/** Objet de données ChampUi. */
		ChampUi(io.vertigo.easyforms.metaformulaire.domain.ChampUi.class),
		/** Objet de données ControleDeChampUi. */
		ControleDeChampUi(io.vertigo.easyforms.metaformulaire.domain.ControleDeChampUi.class),
		/** Objet de données MetaFormulaire. */
		MetaFormulaire(io.vertigo.easyforms.metaformulaire.domain.MetaFormulaire.class),
		/** Objet de données Taxonomy. */
		Taxonomy(io.vertigo.easyforms.metaformulaire.domain.Taxonomy.class),
		/** Objet de données TaxonomyType. */
		TaxonomyType(io.vertigo.easyforms.metaformulaire.domain.TaxonomyType.class),
		/** Objet de données TypeDeChampUi. */
		TypeDeChampUi(io.vertigo.easyforms.metaformulaire.domain.TypeDeChampUi.class)		;

		private final Class<?> clazz;

		private Definitions(final Class<?> clazz) {
			this.clazz = clazz;
		}

		/** 
		 * Classe associée.
		 * @return Class d'implémentation de l'objet 
		 */
		public Class<?> getDtClass() {
			return clazz;
		}
	}

	/**
	 * Enumération des champs de ChampUi.
	 */
	public enum ChampUiFields implements DtFieldName<io.vertigo.easyforms.metaformulaire.domain.ChampUi> {
		/** Propriété 'Code du champ'. */
		codeChamp,
		/** Propriété 'Type de champ'. */
		typeDeChamp,
		/** Propriété 'Type de champ'. */
		typeDeChampLabel,
		/** Propriété 'Id liste de valeurs'. */
		listId,
		/** Propriété 'Id valeur dans la liste'. */
		listValue,
		/** Propriété 'Libellé'. */
		libelle,
		/** Propriété 'Infobulle'. */
		infobulle,
		/** Propriété 'Champs par défaut (non supprimable)'. */
		isDefault,
		/** Propriété 'Information affichée sur la réservation'. */
		isDisplay,
		/** Propriété 'Information obligatoire'. */
		isMandatory,
		/** Propriété 'Contrôles appliqués'. */
		controleDeChamps	}

	/**
	 * Enumération des champs de ControleDeChampUi.
	 */
	public enum ControleDeChampUiFields implements DtFieldName<io.vertigo.easyforms.metaformulaire.domain.ControleDeChampUi> {
		/** Propriété 'Contrôle'. */
		code,
		/** Propriété 'Contrôle'. */
		label,
		/** Propriété 'Description'. */
		description,
		/** Propriété 'Compatible avec les types'. */
		typeDeChamps	}

	/**
	 * Enumération des champs de MetaFormulaire.
	 */
	public enum MetaFormulaireFields implements DtFieldName<io.vertigo.easyforms.metaformulaire.domain.MetaFormulaire> {
		/** Propriété 'Id'. */
		mfoId,
		/** Propriété 'Modèle'. */
		modele	}

	/**
	 * Enumération des champs de Taxonomy.
	 */
	public enum TaxonomyFields implements DtFieldName<io.vertigo.easyforms.metaformulaire.domain.Taxonomy> {
		/** Propriété 'Id'. */
		taxId,
		/** Propriété 'Valeur'. */
		value,
		/** Propriété 'Ordre'. */
		sort,
		/** Propriété 'Actif'. */
		active,
		/** Propriété 'Code'. */
		code,
		/** Propriété 'Taxonomy type'. */
		tatId	}

	/**
	 * Enumération des champs de TaxonomyType.
	 */
	public enum TaxonomyTypeFields implements DtFieldName<io.vertigo.easyforms.metaformulaire.domain.TaxonomyType> {
		/** Propriété 'Id'. */
		tatId,
		/** Propriété 'Code liste'. */
		code,
		/** Propriété 'Libelle'. */
		label,
		/** Propriété 'Actif'. */
		active	}

	/**
	 * Enumération des champs de TypeDeChampUi.
	 */
	public enum TypeDeChampUiFields implements DtFieldName<io.vertigo.easyforms.metaformulaire.domain.TypeDeChampUi> {
		/** Propriété 'Type de champ'. */
		nom,
		/** Propriété 'Label'. */
		label	}

	/** {@inheritDoc} */
	@Override
	public Iterator<Class<?>> iterator() {
		return new Iterator<>() {
			private Iterator<Definitions> it = Arrays.asList(Definitions.values()).iterator();

			/** {@inheritDoc} */
			@Override
			public boolean hasNext() {
				return it.hasNext();
			}

			/** {@inheritDoc} */
			@Override
			public Class<?> next() {
				return it.next().getDtClass();
			}
		};
	}
}
