/*
 * vertigo - application development platform
 *
 * Copyright (C) 2013-2023, Vertigo.io, team@vertigo.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.vertigo.planning.agenda.dao;

import javax.inject.Inject;

import io.vertigo.core.lang.Generated;
import io.vertigo.core.node.Node;
import io.vertigo.datastore.entitystore.EntityStoreManager;
import io.vertigo.datastore.impl.dao.DAO;
import io.vertigo.datastore.impl.dao.StoreServices;
import io.vertigo.datamodel.smarttype.SmartTypeManager;
import io.vertigo.datamodel.task.TaskManager;
import io.vertigo.datamodel.task.definitions.TaskDefinition;
import io.vertigo.datamodel.task.model.Task;
import io.vertigo.datamodel.task.model.TaskBuilder;
import io.vertigo.planning.agenda.domain.ReservationCreneau;

/**
 * This class is automatically generated.
 * DO NOT EDIT THIS FILE DIRECTLY.
 */
@Generated
public final class ReservationCreneauDAO extends DAO<ReservationCreneau, java.lang.Long> implements StoreServices {

	/**
	 * Contructeur.
	 * @param entityStoreManager Manager de persistance
	 * @param taskManager Manager de Task
	 * @param smartTypeManager SmartTypeManager
	 */
	@Inject
	public ReservationCreneauDAO(final EntityStoreManager entityStoreManager, final TaskManager taskManager, final SmartTypeManager smartTypeManager) {
		super(ReservationCreneau.class, entityStoreManager, taskManager, smartTypeManager);
	}


	/**
	 * Creates a taskBuilder.
	 * @param name  the name of the task
	 * @return the builder 
	 */
	private static TaskBuilder createTaskBuilder(final String name) {
		final TaskDefinition taskDefinition = Node.getNode().getDefinitionSpace().resolve(name, TaskDefinition.class);
		return Task.builder(taskDefinition);
	}

	/**
	 * Execute la tache TkInsertReservationsCreneau.
	 * @param reservationsCreneau DtList de ReservationCreneau
	*/
	@io.vertigo.datamodel.task.proxy.TaskAnnotation(
			name = "TkInsertReservationsCreneau",
			request = """
			INSERT INTO reservation_creneau(REC_ID, DATE_LOCALE, MINUTES_DEBUT, MINUTES_FIN, INSTANT_CREATION, AGE_ID)
        values  (
            nextval('SEQ_RESERVATION_CRENEAU'),
            #reservationsCreneau.0.dateLocale#,
            #reservationsCreneau.0.minutesDebut#,
            #reservationsCreneau.0.minutesFin#,
            #reservationsCreneau.0.instantCreation#
            #reservationsCreneau.0.ageId#);""",
			taskEngineClass = io.vertigo.basics.task.TaskEngineProcBatch.class)
	public void insertReservationsCreneau(@io.vertigo.datamodel.task.proxy.TaskInput(name = "reservationsCreneau", smartType = "STyDtReservationCreneau") final io.vertigo.datamodel.data.model.DtList<io.vertigo.planning.agenda.domain.ReservationCreneau> reservationsCreneau) {
		final Task task = createTaskBuilder("TkInsertReservationsCreneau")
				.addValue("reservationsCreneau", reservationsCreneau)
				.build();
		getTaskManager().execute(task);
	}

}
